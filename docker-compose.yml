version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: database
    env_file: .env
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    mem_limit: 256M
    cpus: 0.25
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  todo:
    build:
      context: ./backend/todo_service
      dockerfile: Dockerfile
    container_name: todo
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
    mem_limit: 64M
    cpus: 0.1
    ports:
      - ${TODO_SERVICE_PORT}:5000
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  blog:
    build:
      context: ./backend/blog_service
      dockerfile: Dockerfile
    container_name: blog
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
    mem_limit: 64M
    cpus: 0.1
    ports:
      - ${BLOG_SERVICE_PORT}:5001
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
  
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    mem_limit: 32M
    cpus: 0.05
    depends_on:
      - todo
      - blog
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - ${NGINX_PORT}:80
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
      
      